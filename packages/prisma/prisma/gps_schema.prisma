generator client {
  provider = "prisma-client-js"
  output   = "./generated/gps-client"
}

datasource db {
  provider = "postgresql"
  url      = env("GPS_DATABASE_URL")
}

model GpsLog {
  id          Int         @id @default(autoincrement())
  trackingId  Int         @map("tracking_id")
  distance    Decimal     @db.Decimal
  started     DateTime    @db.Timestamptz(6)
  last        DateTime    @db.Timestamptz(6)
  active      Boolean
  gpsTracking GpsTracking @relation(fields: [trackingId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([started])
  @@index([trackingId])
  @@map("gps_log")
}

model GpsTracking {
  id          Int           @id @default(autoincrement())
  name        String
  key         String        @unique
  started     DateTime      @db.Timestamptz(6)
  ended       DateTime?     @db.Timestamptz(6)
  accessToken AccessToken[]
  gpsLog      GpsLog[]

  @@index([key])
  @@map("gps_tracking")
}

model AccessToken {
  id          Int         @id @default(autoincrement())
  key         String
  token       String
  readonly    Boolean     @default(true)
  created     DateTime    @db.Timestamptz(6)
  gpsTracking GpsTracking @relation(fields: [key], references: [key], onDelete: Cascade, onUpdate: NoAction)

  @@index([token])
  @@map("access_token")
}

model MapConfig {
  id      Int      @id @default(autoincrement())
  name    String
  created DateTime @db.Timestamptz(6)
  data    Json

  @@map("map_config")
}
